// Generated by CoffeeScript 1.10.0
(function() {
  var Discord, DiscordBot,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Discord = require('discord.js');


  /*
  	A wrapper class for discord.js
   */

  module.exports = DiscordBot = (function() {
    DiscordBot.prototype.bot = null;

    DiscordBot.prototype.online = false;

    DiscordBot.prototype.commandMap = new Map();

    function DiscordBot(token) {
      this.token = token;
      this.bot = new Discord.Client();
      this.bot.login(this.token);
      this.bot.on("ready", (function(_this) {
        return function() {
          console.log("The bot is online!");
          _this.channel = _this.bot.guilds.find("id", "174405074087313408").channels.find("name", "general");
          return _this.online = true;
        };
      })(this));
      this.bot.on("message", (function(_this) {
        return function(message) {
          var args, root, str;
          str = message.content;
          args = str.split(" ");
          if (args.length > 0) {
            root = args[0];
            args.splice(0, 1);
            if (_this.commandMap.has(root)) {
              return _this.commandMap.get(root)(message.author, message.channel, args);
            }
          }
        };
      })(this));
    }


    /*
    		Registers a command.
     */

    DiscordBot.prototype.registerCommand = function(root, callback) {
      this.commandMap.set(root, callback);
      return console.log("[INFO] command registered: " + root);
    };

    DiscordBot.prototype.on_command = function(prefixes, callback) {
      return this.bot.on("message", function(message) {
        var ref, str;
        str = message.content;
        if (ref = str.charAt(0), indexOf.call(prefixes, ref) >= 0) {
          console.log("[INFO] user " + message.author.username + " has ran command: " + (str.slice(1)));
          return callback(message.author, message.channel, str.slice(1).split(" "));
        }
      });
    };

    DiscordBot.prototype.chat = function(channel, message) {
      return channel.sendMessage(message);
    };

    return DiscordBot;

  })();

}).call(this);
