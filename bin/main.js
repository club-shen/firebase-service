// Generated by CoffeeScript 1.10.0
(function() {
  var Database, DiscordBot, bot, database, fb, firebase, firebaseConfig, fs, ladder;

  firebase = require("firebase");

  fs = require("fs");

  Database = require("shn-ladder-api").Database;

  DiscordBot = require("./discord");

  firebaseConfig = {
    serviceAccount: {
      projectId: "" + process.env.FIREBASE_PROJECT_ID,
      clientEmail: "" + process.env.FIREBASE_CLIENT_EMAIL,
      privateKey: "-----BEGIN PRIVATE KEY-----\n" + (process.env.FIREBASE_PRIVATE_KEY.replace(/\\n/g, "\n")) + "\n-----END PRIVATE KEY-----\n"
    },
    databaseURL: "" + process.env.FIREBASE_DATABASE_URL
  };

  fb = firebase.initializeApp(firebaseConfig);

  database = new Database(fb.database());

  ladder = null;

  bot = new DiscordBot("MTkxNDU2MzEyMTc2MDE3NDA5.Cj6jFQ.I0GLo9KeQd9Uf3LSH1HMT8eFP1Y");

  bot.registerCommand('!match', function(author, channel, args) {
    var ladderSlug, matchId, seasonSlug, slug_array, userUid;
    if (args.length === 0) {
      bot.chat(channel, "`!elo <player>`: prints the ELO rating of the specified player.");
    }
    if (args.length === 2) {
      slug_array = args[0].split("/");
      userUid = args[1];
      bot.chat(channel, "Finding all matches in `" + args[0] + "` with player `" + userUid + "`");
      database.getLadder(slug_array[0], function(ladder) {
        return ladder.getSeason(slug_array[1], function(season) {
          return season.getPlayerMatches(userUid, function(matches) {
            return bot.chat(channel, "Found `" + matches.length + "` matches with this player.");
          });
        });
      });
    }
    if (args.length === 3) {
      slug_array = args[0].split("/");
      ladderSlug = slug_array[0];
      seasonSlug = slug_array[1];
      userUid = args[1];
      matchId = args[2];
      bot.chat(channel, "Finding match " + ((new Number(matchId)) + 1) + " in `" + args[0] + "` with player `" + userUid + "`");
      return database.getLadderAsync(ladderSlug, function(ladder) {
        var match, player, season;
        if (ladder == null) {
          bot.chat(channel, "The ladder `" + ladderSlug + "` does not exist.");
          return;
        }
        season = ladder.getSeason(seasonSlug);
        if (season == null) {
          bot.chat(channel, "The season `" + ladderSlug + "/" + seasonSlug + "` does not exist.");
          return;
        }
        player = season.getPlayer(userUid);
        if (player == null) {
          bot.chat(channel, "The player `" + userUid + "` does not exist.");
          return;
        }
        match = player.getMatchByIndex(matchId);
        if (match == null) {
          bot.chat(channel, "The match `#" + (new Number(matchId) + 1) + "` does not exist.");
          return;
        }
        return bot.chat(channel, "Match #" + ((new Number(matchId)) + 1) + ":\n```\n**" + match.userUids[0] + " vs. " + match.userUids[1] + "** (" + match.score[0] + ":" + match.score[1] + ")\nstatus: " + (match.status === 0 ? "VALID" : match.status === 1 ? "PENDING" : match.status === 2 ? "INVALID" : void 0) + "\n```");
      });
    }
  });

  bot.registerCommand('!elo', function(author, channel, args) {
    var message, players;
    if (args.length === 0) {
      bot.chat(channel, "`!elo <player>`: prints the ELO rating of the specified player.");
    }
    if (args.length === 1) {
      players = ladder.getPlayersByName(args[1]);
      if (players.length === 0) {
        return bot.chat(channel, "A player with that name cannot be found.");
      } else {
        message = "The ELO of **" + players[0].user.display_name + "** is **" + players[0].rating + "**.";
        if (players.length > 1) {
          message = ("We have found multiple players with the name " + args[1] + ", but only the first match will be printed.\n") + message;
        }
        return bot.chat(channel, message);
      }
    }
  });

  bot.registerCommand('!t10', function(author, channel, args) {
    var i, j, msg, player, win_rate;
    msg = "The current top 10 players are:";
    for (i = j = 0; j <= 9; i = ++j) {
      player = ladder.getPlayerByRank(i);
      win_rate = Math.floor((player.match_wins / player.total_matches) * 1000) / 10;
      msg += "\n" + (i + 1) + ". **" + player.user.display_name + "** (**" + win_rate + "% wins**) " + (win_rate === 100 ? "*undefeated*" : "");
    }
    return bot.chat(channel, msg);
  });

  bot.registerCommand('!i', function(author, channel, args) {
    var message, player, players, winrate;
    if (args.length === 0) {
      bot.chat(channel, "`!i <player>`: prints various information about the specified player.");
    }
    if (args.length === 1) {
      players = ladder.getPlayersByName(args[1]);
      player = players.length === 0 ? null : players[0];
      if (player == null) {
        return bot.chat(channel, "A player with that name cannot be found.");
      } else {
        winrate = (player.match_wins / player.total_matches).toFixed(2) * 100;
        message = "`player: " + player.user.display_name + "`\n`rating: " + player.rating + "`\n`total matches: " + player.total_matches + "`\n`total wins: " + player.match_wins + " (" + winrate + "%)`";
        return bot.chat(channel, message);
      }
    }
  });

}).call(this);
